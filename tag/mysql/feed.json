{
    "version": "https://jsonfeed.org/version/1",
    "title": "Being on sea, sail; being on land, settle. • All posts by \"mysql\" tag",
    "description": "",
    "home_page_url": "https://new.limina.top",
    "items": [
        {
            "id": "https://new.limina.top/2024/09/26/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E5%86%99%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BD%91%E7%AB%99-04/",
            "url": "https://new.limina.top/2024/09/26/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E5%86%99%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BD%91%E7%AB%99-04/",
            "title": "使用 Vue 3 + Element Plus 从头开始写一个数据库网站-04",
            "date_published": "2024-09-26T07:36:45.000Z",
            "content_html": "<h1 id=\"使用-vue-3-element-plus-从头开始写一个数据库网站-04\"><a class=\"anchor\" href=\"#使用-vue-3-element-plus-从头开始写一个数据库网站-04\">#</a> 使用 Vue 3 + Element Plus 从头开始写一个数据库网站 - 04</h1>\n<blockquote>\n<p>由于 PrismJS 尚不支持 Vue 的语法高亮，因此 Vue 代码块均先使用 HTML 的高亮</p>\n<p>2024-09-23</p>\n</blockquote>\n<p>接下来我们来编写数据展示和浏览页面。</p>\n<h2 id=\"搭建本地测试数据库\"><a class=\"anchor\" href=\"#搭建本地测试数据库\">#</a> 搭建本地测试数据库</h2>\n<h3 id=\"安装-mysql-并启动\"><a class=\"anchor\" href=\"#安装-mysql-并启动\">#</a> 安装 MySQL 并启动</h3>\n<p>下载 <a href=\"https://dev.mysql.com/downloads/mysql/\">MySQL</a>，以在本地搭建测试数据库。</p>\n<p>以 8.4.2 LTS 版本为例，使用 MSI Installer 进行安装对新手来说比较便捷。</p>\n<p>安装完成后，windows + R 输入 services.msc 打开服务，找到 MySQL84，右键启动</p>\n<p>如果在安装过程中选择了启动 MySQL 服务，那么这个服务应该已经在运行了，但当我们下次再启动 MySQL 时，仍需先启动 MySQL 服务，否则输入密码后会闪退</p>\n<h3 id=\"创建-mysql-数据库\"><a class=\"anchor\" href=\"#创建-mysql-数据库\">#</a> 创建 MySQL 数据库</h3>\n<p>按照以下步骤创建 MySQL 数据库和表：</p>\n<ol>\n<li>\n<p>打开 MySQL 命令行客户端（名为  <code>MySQL 8.4 Command Line Client</code> ）并登录（密码应该已经在安装过程中被设置）</p>\n</li>\n<li>\n<p>创建一个新的数据库：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> admarker_db<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>切换到新创建的数据库：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">USE</span> admarker_db<span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"向数据库中添加数据\"><a class=\"anchor\" href=\"#向数据库中添加数据\">#</a> 向数据库中添加数据</h3>\n<p>如果数据比较少，可以手动添加</p>\n<ol>\n<li>\n<p>创建一个用于存储生物标志物信息的表：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> biomarkers <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Biomarker <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    PMID <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Description <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Application <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>使用  <code>INSERT INTO</code>  语句插入数据</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> biomarkers <span class=\"token punctuation\">(</span>Biomarker<span class=\"token punctuation\">,</span> PMID<span class=\"token punctuation\">,</span> Description<span class=\"token punctuation\">,</span> Application<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Biomarker1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12345678</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'This is a description for Biomarker1.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cancer Diagnosis'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n<p>如果数据比较多，可以使用数据库管理工具例如 phpMyAdmin（免费）、Navicat（付费）等来导入</p>\n<h2 id=\"搭建后端服务\"><a class=\"anchor\" href=\"#搭建后端服务\">#</a> 搭建后端服务</h2>\n<p>在之前的教程中，我们已经了解了目录结构：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ADDB/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── .vscode/                # 存放 VS Code 配置文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── node_modules/           # 存放项目依赖包</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>├── public/                 # 存放静态资源，如 HTML、favicon</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>├── src/                    # 源代码目录</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>│   ├── assets/             # 存放静态资源，如图片、字体</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>│   ├── components/         # 存放可复用的 Vue 组件</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>│   ├── router/             # 存放 Vue Router 配置</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>│   ├── stores/             # 存放状态管理配置（Pinia）</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>│   ├── views/              # 存放不同页面的 Vue 组件</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>│   ├── App.vue             # 根组件</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>│   ├── main.js             # 应用入口文件</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>├── .eslintrc.cjs           # ESLint 配置文件</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>├── .gitignore              # Git 忽略文件列表</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>├── .prettierrc.json        # Prettier 配置文件</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>├── index.html              # 主 HTML 模板文件</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>├── jsconfig.json           # JavaScript 项目配置文件</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>├── package.json            # 项目配置文件，记录依赖及脚本</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>├── pnpm-lock.yaml          # pnpm 锁定文件，确保依赖版本一致</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>├── README.md               # 项目的自述文档</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>├── vite.config.js          # Vite 配置文件</pre></td></tr></table></figure><h3 id=\"创建后端项目目录\"><a class=\"anchor\" href=\"#创建后端项目目录\">#</a> 创建后端项目目录</h3>\n<p>后端项目可以根据你的需求放在与 Vue 3 项目根目录  <code>ADDB</code>  并列的层级，也可以放在  <code>ADDB</code>  下</p>\n<p>以放在  <code>ADDB</code>  下为例：</p>\n<p>打开新的终端窗口，在项目根目录  <code>ADDB</code>  下创建一个  <code>server</code>  目录用于后端项目，并进入该目录：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> backend</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> backend</pre></td></tr></table></figure><p>如果你使用的是 PowerShell， <code>mkdir</code>  命令有可能会报错，可以尝试以下命令：</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">New-Item</span> <span class=\"token operator\">-</span>ItemType Directory <span class=\"token operator\">-</span>Path server</pre></td></tr></table></figure><p>初始化 Node.js 项目并安装 Express：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">pnpm</span> init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">pnpm</span> <span class=\"token function\">add</span> express</pre></td></tr></table></figure><p>这会在  <code>ADDB/backend</code>  目录下生成一个  <code>package.json</code>  文件</p>\n<p>现代的 Node.js 项目，尤其是与 Vite 或其他现代打包工具一起使用时，通常使用的是 ES 模块规范 (ESM)，例如 Vue 3 使用 ES6 语法。</p>\n<p>与之相对的是 CommonJS 模块系统，这是 Node.js 的传统模块系统，在 Node.js 中默认使用。</p>\n<p>为保持一致性，我们在  <code>package.json</code>  文件中加一行来切换到 ES 模块语法</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ...</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"使用-express-生成后端项目骨架\"><a class=\"anchor\" href=\"#使用-express-生成后端项目骨架\">#</a> 使用 Express 生成后端项目骨架</h3>\n<p>创建一个  <code>src/index.js</code>  文件，并设置基本的 Express 服务器</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 解析 JSON 请求体</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">服务器正运行在 http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"设置与-mysql-数据库的连接\"><a class=\"anchor\" href=\"#设置与-mysql-数据库的连接\">#</a> 设置与 MySQL 数据库的连接</h4>\n<p>安装 MySQL 驱动：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">pnpm</span> <span class=\"token function\">add</span> mysql2</pre></td></tr></table></figure><p>在  <code>src/index.js</code>  中添加数据库连接代码：</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> mysql <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mysql2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">.</span><span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">host</span><span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token string\">'your_username'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">'your_password'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">database</span><span class=\"token operator\">:</span> <span class=\"token string\">'your_database'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>db<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'数据库连接成功。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>请确保将  <code>your_username</code> 、 <code>your_password</code>  和  <code>your_database</code>  替换为实际的 MySQL 配置。</p>\n<h4 id=\"启动服务器\"><a class=\"anchor\" href=\"#启动服务器\">#</a> 启动服务器</h4>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">node</span> index.js</pre></td></tr></table></figure><p>如果一切顺利，你应该会在终端中看到 &quot; 服务器正在运行在 <a href=\"http://localhost:3000\">http://localhost:3000</a>&quot; 的信息。</p>\n<p>到这里，我们已经完成了项目初始化、前端配置和后端服务的基础设置。接下来我们将设计和实现 API。</p>\n",
            "tags": [
                "Vue 3",
                "Element Plus",
                "MySQL"
            ]
        },
        {
            "id": "https://new.limina.top/2021/02/08/%E4%BB%8E%E6%9C%AC%E5%9C%B0%E8%BF%81%E7%A7%BB%E7%BD%91%E7%AB%99%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "url": "https://new.limina.top/2021/02/08/%E4%BB%8E%E6%9C%AC%E5%9C%B0%E8%BF%81%E7%A7%BB%E7%BD%91%E7%AB%99%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "title": "从本地迁移网站到服务器",
            "date_published": "2021-02-07T17:55:34.000Z",
            "content_html": "<blockquote>\n<p>本教程仅针对 Hostinger</p>\n</blockquote>\n<h2 id=\"进入数据库管理页面\"><a class=\"anchor\" href=\"#进入数据库管理页面\">#</a> 进入数据库管理页面</h2>\n<p>在宝塔面板数据库标签页面点击 phpMyAdmin</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E8%BF%9B%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2-2021-08-21.png\" alt=\"进入数据库管理页面-2021-08-21\" /></p>\n<h2 id=\"导出数据库文件\"><a class=\"anchor\" href=\"#导出数据库文件\">#</a> 导出数据库文件</h2>\n<p>在页面左侧找到要导出数据的本地数据库，然后全选导出</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6-2021-08-21.png\" alt=\"导出数据库文件-2021-08-21\" /></p>\n<p>为了避免服务器 myphp 版本跟本机的不一致而导致的问题，在导出方式选择  <code>自定义 - 显示所有可用的选项</code> ，然后下拉，在【格式特定选项】中的  <code>最大程度兼容数据库系统或旧版本的MySQL服务器</code> 选项中，选择  <code>MYSQL40</code> （在服务器中还原数据库的时也要选择该选项）</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E6%A0%BC%E5%BC%8F%E7%89%B9%E5%AE%9A%E9%80%89%E9%A1%B9-2021-08-21.png\" alt=\"格式特定选项-2021-08-21\" /></p>\n<p>然后点击  <code>执行</code></p>\n<h2 id=\"修改数据库\"><a class=\"anchor\" href=\"#修改数据库\">#</a> 修改数据库</h2>\n<p>数据库中记录的是本地 localhost 信息，要上线到服务器就要改成我的域名才能访问。我们可以直接改文件。复制一份 sql 文件，把 localhost 替换成我的域名，全部替换完毕就保存。</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B61-2021-08-21.png\" alt=\"修改数据库文件1-2021-08-21\" /></p>\n<p>创建好后点击  <code>Enter phpMyAdmin</code>  进入数据库管理面板</p>\n<p>导入成功后回到 Hostinger 面板在左侧找到  <code>Files -&gt; File Manager</code> ，将所有网站文件打包上传</p>\n<p>修改 WordPress 配置文件并保存</p>\n<h2 id=\"还原数据库\"><a class=\"anchor\" href=\"#还原数据库\">#</a> 还原数据库</h2>\n<p>新建一个新的数据库</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E6%96%B0%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93-2021-08-21.png\" alt=\"新建数据库-2021-08-21\" /></p>\n<p>还原数据库</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E8%BF%98%E5%8E%9F%E6%95%B0%E6%8D%AE%E5%BA%93-2021-08-21.png\" alt=\"还原数据库-2021-08-21\" /></p>\n<p>修改 WordPress 的配置文件</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E4%BF%AE%E6%94%B9WordPress%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-2021-08-21.png\" alt=\"修改WordPress配置文件-2021-08-21\" /></p>\n<p>修改数据库文件，将所有测试域名换成新的域名</p>\n<p><img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B62-2021-08-21.png\" alt=\"修改数据库文件2-2021-08-21\" /> <img loading=\"lazy\" data-src=\"https://img.limina.top/blog/%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B63-2021-08-21.png\" alt=\"修改数据库文件3-2021-08-21\" /></p>\n",
            "tags": [
                "建站",
                "MySQL"
            ]
        }
    ]
}