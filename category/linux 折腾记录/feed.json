{
    "version": "https://jsonfeed.org/version/1",
    "title": "Being on sea, sail; being on land, settle. • All posts by \"linux 折腾记录\" category",
    "description": "",
    "home_page_url": "https://whylim.github.io",
    "items": [
        {
            "id": "https://whylim.github.io/2024/06/03/%E5%AE%89%E8%A3%85%E5%92%8C%E6%9B%B4%E6%96%B0deb%E5%8C%85/",
            "url": "https://whylim.github.io/2024/06/03/%E5%AE%89%E8%A3%85%E5%92%8C%E6%9B%B4%E6%96%B0deb%E5%8C%85/",
            "title": "在 Ubuntu 中安装、更新和移除 deb 包",
            "date_published": "2024-06-03T08:59:53.000Z",
            "content_html": "<h1 id=\"在-ubuntu-中安装-更新和移除-deb-包\"><a class=\"anchor\" href=\"#在-ubuntu-中安装-更新和移除-deb-包\">#</a> 在 Ubuntu 中安装、更新和移除 deb 包</h1>\n<blockquote>\n<p>deb 包（.deb 文件）是 Debian 软件包，用于在 Debian 及其衍生发行版（如 Ubuntu）中安装软件。</p>\n</blockquote>\n<h2 id=\"安装-deb-包\"><a class=\"anchor\" href=\"#安装-deb-包\">#</a> 安装 deb 包</h2>\n<p>安装 deb 包可以使用 dpkg 命令或 apt 命令。</p>\n<h3 id=\"使用-dpkg-命令\"><a class=\"anchor\" href=\"#使用-dpkg-命令\">#</a> 使用 dpkg 命令</h3>\n<ol>\n<li>\n<p>打开终端（快捷键  <code>Ctrl</code>  +  <code>Alt</code>  +  <code>T</code> ）。</p>\n</li>\n<li>\n<p>导航到存放 deb 包的目录。例如，如果 deb 包位于  <code>Downloads</code>  文件夹中：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/Downloads</pre></td></tr></table></figure></li>\n<li>\n<p>使用 dpkg 命令安装 deb 包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> example.deb</pre></td></tr></table></figure></li>\n<li>\n<p>如果在安装过程中遇到依赖问题，可以运行以下命令来修复：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-f</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"使用-apt-命令\"><a class=\"anchor\" href=\"#使用-apt-命令\">#</a> 使用 apt 命令</h3>\n<p>apt 命令可以自动处理依赖关系：</p>\n<ol>\n<li>\n<p>打开终端并导航到 deb 包所在的目录。</p>\n</li>\n<li>\n<p>使用以下命令安装 deb 包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> ./example.deb</pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"更新-deb-包\"><a class=\"anchor\" href=\"#更新-deb-包\">#</a> 更新 deb 包</h2>\n<p>当需要更新已经安装的 deb 包时，可以下载新版本的 deb 包，然后重复上述的安装过程。系统会自动处理包的更新。</p>\n<h2 id=\"移除-deb-包\"><a class=\"anchor\" href=\"#移除-deb-包\">#</a> 移除 deb 包</h2>\n<p>如果需要移除已经安装的 deb 包，可以使用以下命令：</p>\n<ol>\n<li>\n<p>使用 dpkg 命令移除：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-r</span> example</pre></td></tr></table></figure></li>\n<li>\n<p>使用 apt 命令移除：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove example</pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"检查已安装的-deb-包\"><a class=\"anchor\" href=\"#检查已安装的-deb-包\">#</a> 检查已安装的 deb 包</h2>\n<p>可以使用以下命令列出系统中所有已安装的 deb 包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span></pre></td></tr></table></figure><p>要查找特定的软件包是否安装，可以使用 grep 命令，例如检查是否安装了  <code>example</code>  包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> example</pre></td></tr></table></figure><h2 id=\"案例\"><a class=\"anchor\" href=\"#案例\">#</a> 案例</h2>\n<p>要移除一个 deb 包，但不知道包名怎么办？</p>\n<h3 id=\"查找安装的-deb-包文件\"><a class=\"anchor\" href=\"#查找安装的-deb-包文件\">#</a> 查找安装的 deb 包文件</h3>\n<p>首先，可以使用  <code>dpkg</code>  命令列出所有已安装的包，结合  <code>grep</code>  命令查找相关信息：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token operator\">&lt;</span>关键字<span class=\"token operator\">></span></pre></td></tr></table></figure><p>例如，如果你想移除的是  <code>linuxqq</code>  相关的包，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> linuxqq</pre></td></tr></table></figure><h3 id=\"确定包名\"><a class=\"anchor\" href=\"#确定包名\">#</a> 确定包名</h3>\n<p>上述命令会输出包含关键字的已安装包的信息，从中找到你要移除的包名。例如，输出可能是：</p>\n<figure class=\"highlight plaintext\"><figcaption data-lang=\"plaintext\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ii  linuxqq     3.2.8-23873     amd64        Tencent QQ for Linux</pre></td></tr></table></figure><p>在这个例子中，包名就是  <code>linuxqq</code></p>\n<h3 id=\"移除-deb-包-2\"><a class=\"anchor\" href=\"#移除-deb-包-2\">#</a> 移除 deb 包</h3>\n<p>使用  <code>apt</code>  或  <code>dpkg</code>  命令移除包：</p>\n<h4 id=\"使用-apt-命令-2\"><a class=\"anchor\" href=\"#使用-apt-命令-2\">#</a> 使用 apt 命令：</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove linuxqq</pre></td></tr></table></figure><p>或者，如果你想彻底移除包括配置文件，可以使用：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge linuxqq</pre></td></tr></table></figure><h4 id=\"使用-dpkg-命令-2\"><a class=\"anchor\" href=\"#使用-dpkg-命令-2\">#</a> 使用 dpkg 命令：</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-r</span> linuxqq</pre></td></tr></table></figure><h3 id=\"清理系统可选\"><a class=\"anchor\" href=\"#清理系统可选\">#</a> 清理系统（可选）</h3>\n<p>在移除包后，可以使用以下命令清理系统中不再需要的依赖和文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> clean</pre></td></tr></table></figure><h3 id=\"完整流程\"><a class=\"anchor\" href=\"#完整流程\">#</a> 完整流程</h3>\n<p>假设你要移除名为  <code>linuxqq</code>  的软件包，完整流程如下：</p>\n<ol>\n<li>\n<p>查找包名：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> linuxqq</pre></td></tr></table></figure></li>\n<li>\n<p>移除包：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove linuxqq</pre></td></tr></table></figure></li>\n<li>\n<p>清理系统：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> clean</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2021/03/10/ubuntu%E5%BC%80%E6%9C%BA%E5%85%89%E6%A0%87%E9%97%AA%E7%83%81%E8%BF%9B%E4%B8%8D%E4%BA%86%E7%B3%BB%E7%BB%9F/",
            "url": "https://whylim.github.io/2021/03/10/ubuntu%E5%BC%80%E6%9C%BA%E5%85%89%E6%A0%87%E9%97%AA%E7%83%81%E8%BF%9B%E4%B8%8D%E4%BA%86%E7%B3%BB%E7%BB%9F/",
            "title": "Ubuntu 开机光标闪烁进不了系统",
            "date_published": "2021-03-10T09:15:14.000Z",
            "content_html": "<blockquote>\n<p>前几天把同一块硬盘上的黑苹果删掉装了 deepin 20 然后再进 Ubuntu 就进不去了，左上角有个光标一直在闪 尝试了修复引导，但是没有用</p>\n</blockquote>\n<h2 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h2>\n<p>暂不清楚，根据结果来看是显卡驱动不兼容，但是就算是引导损坏应该也不会影响显卡驱动啊？</p>\n<h2 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<p>在光标闪烁的界面按  <code>Ctrl</code> + <code>Alt</code> + <code>F2</code> / <code>F3</code> / <code>F4</code> / <code>F5</code> / <code>F6</code> / <code>F7</code></p>\n<p>在命令行界面输入账号密码登陆</p>\n<p>登陆成功再按  <code>Ctrl</code> + <code>Alt</code> + <code>F1</code>  返回到图形界面</p>\n<p>发现现在已经可以进系统了</p>\n<p>进入系统打开终端卸载显卡驱动</p>\n<p>命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 卸载显卡驱动</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove <span class=\"token parameter variable\">--purge</span> nvidia*</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 重启</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">reboot</span></pre></td></tr></table></figure>",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2021/02/21/%E5%88%B6%E4%BD%9C%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%EF%BC%88ubuntu%EF%BC%89/",
            "url": "https://whylim.github.io/2021/02/21/%E5%88%B6%E4%BD%9C%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%EF%BC%88ubuntu%EF%BC%89/",
            "title": "制作移动硬盘启动盘（Ubuntu）",
            "date_published": "2021-02-21T12:30:00.000Z",
            "content_html": "<blockquote>\n<p>很久很久以前装的 Ubuntu 的 WiFi 一直有问题，今天问了 tb 说这个太费时间了。。。<br />\n想到之前那个用来做启动盘的 U 盘好像不太行，想想还是重装下系统吧<br />\n但是我已经没有空 U 盘了，不想买也不想格式化，那就用移动硬盘吧</p>\n</blockquote>\n<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<ul>\n<li>工具依旧是 Rufus，官方的不用白不用</li>\n<li>系统镜像 唔，都 20.04 了啊。。。</li>\n<li>我的 hxd gl 赞助的移动硬盘（纽曼 清风 3.0）</li>\n</ul>\n<h3 id=\"一点小问题\"><a class=\"anchor\" href=\"#一点小问题\">#</a> 一点小问题</h3>\n<p>没有移动硬盘可以选</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20210221202734647.png\" alt=\"没有移动硬盘选\" /></p>\n<p>没事 点高级选项</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20210221202801284.png\" alt=\"高级选项\" /></p>\n<p>显示 USB 外置硬盘</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20210221202833750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70\" alt=\"显示USB外置硬盘\" /></p>\n<p>老电脑用 MBR，新电脑用 GPT</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20210221202914407.png\" alt=\"GPT\" /></p>\n<p>开始</p>\n<p>完成后有一个禁用安全启动的提示</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20210221202935770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70\" alt=\"禁用安全启动提示\" /></p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/12/21/ubuntu%E5%BC%80%E6%9C%BA%E6%85%A2/",
            "url": "https://whylim.github.io/2020/12/21/ubuntu%E5%BC%80%E6%9C%BA%E6%85%A2/",
            "title": "Ubuntu 开机慢",
            "date_published": "2020-12-21T06:50:00.000Z",
            "content_html": "<p>安装完开机需要大约 2 分钟（SSD）</p>\n<p>按方向键上键到代码页面</p>\n<p>看到有一行  <code>A start job is running for dev-disk-by...</code></p>\n<p>然后会计时 1 分 30 秒</p>\n<h2 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h2>\n<p>系统启动时 swap 分区挂载失败</p>\n<h2 id=\"解决方案\"><a class=\"anchor\" href=\"#解决方案\">#</a> 解决方案</h2>\n<p>使用 blkid 命令来查询 swap 的 UUID</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> blkid</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201221144520190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\" /></p>\n<p>查看 /etc/fstab 文件中 swap 分区的 UUID</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gedit /etc/fstab</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201221144734296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\" /></p>\n<p>可以看到两者不一致</p>\n<p>用 blkid 查看到的 UUID 去替换 fstab 文件中的 UUID</p>\n<p>重启</p>\n<p>五秒开机，丝般顺滑～</p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/24/ubuntu%E4%B8%8B%E4%B8%A4%E7%A7%8D%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%85%A8%E5%B1%80%E4%BD%BF%E7%94%A8/",
            "url": "https://whylim.github.io/2020/11/24/ubuntu%E4%B8%8B%E4%B8%A4%E7%A7%8D%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%85%A8%E5%B1%80%E4%BD%BF%E7%94%A8/",
            "title": "Ubuntu 下两种软件的全局使用",
            "date_published": "2020-11-24T00:33:00.000Z",
            "content_html": "<blockquote>\n<p>Ubuntu 下安装的软件有几种：</p>\n<ol>\n<li>软件商店安装的</li>\n<li>sudo 在线安装的</li>\n<li>用 deb 包安装的</li>\n<li>源码编译安装的</li>\n<li>直接解压使用的</li>\n</ol>\n<p>用 Ubuntu 以来一直苦于第 5 类要带路径运行写一长串代码，丑且烦<br />\n最近找到方法了，记录一下，顺便也记录一下第 4 类</p>\n</blockquote>\n<h2 id=\"源码编译安装的\"><a class=\"anchor\" href=\"#源码编译安装的\">#</a> 源码编译安装的</h2>\n<p>可以用如下命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'export PATH=\"软件路径\":$PATH'</span> <span class=\"token operator\">>></span> ~/.bashrc</pre></td></tr></table></figure><p>添加环境变量</p>\n<h2 id=\"直接解压使用的\"><a class=\"anchor\" href=\"#直接解压使用的\">#</a> 直接解压使用的</h2>\n<p>这个其实相当于 windows 下的 exe</p>\n<p>把程序的可执行文件添加到  <code>/usr/bin</code>  目录即可</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> 软件路径 /usr/bin</pre></td></tr></table></figure>",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/18/ubuntu%E4%B8%8B%E6%89%B9%E9%87%8F%E8%BD%ACpdf/",
            "url": "https://whylim.github.io/2020/11/18/ubuntu%E4%B8%8B%E6%89%B9%E9%87%8F%E8%BD%ACpdf/",
            "title": "Ubuntu 下批量转 pdf",
            "date_published": "2020-11-18T09:29:00.000Z",
            "content_html": "<h2 id=\"软件\"><a class=\"anchor\" href=\"#软件\">#</a> 软件</h2>\n<p>LibreOffice</p>\n<p>系统一般都自带了</p>\n<h2 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>libreoffice <span class=\"token parameter variable\">--headless</span> <span class=\"token parameter variable\">--invisible</span> --convert-to pdf *.ppt</pre></td></tr></table></figure><p>word excel 应该也是一样的</p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/16/ubuntuwineqq%E5%8D%A1%E6%AD%BB/",
            "url": "https://whylim.github.io/2020/11/16/ubuntuwineqq%E5%8D%A1%E6%AD%BB/",
            "title": "Ubuntu wine QQ 卡死",
            "date_published": "2020-11-16T03:06:00.000Z",
            "content_html": "<blockquote>\n<p>前几天在 Ubuntu 下写基因组信息学实验报告<br />\n用 wps-linux 转 pdf 遇到了字体问题，就把 windows 字体拷过来安装了<br />\n然后再用 QQ 就出现一堆口口口口。但是这个不影响使用<br />\n影响使用的是他会卡死。</p>\n</blockquote>\n<h2 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h2>\n<p>字体缓存没更新</p>\n<h2 id=\"解决方案\"><a class=\"anchor\" href=\"#解决方案\">#</a> 解决方案</h2>\n<ol>\n<li>\n<p>删除 windows 字体</p>\n<p>嫌麻烦我就没删。</p>\n<p>或者可以：</p>\n</li>\n<li>\n<p>重建缓存</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/share/fonts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> fc-cache <span class=\"token parameter variable\">-fv</span></pre></td></tr></table></figure></li>\n</ol>\n<p>应该解决了。</p>\n<h2 id=\"后续\"><a class=\"anchor\" href=\"#后续\">#</a> 后续</h2>\n<p>好像还是会卡</p>\n<p>想到上次安装字体的时候有一堆报错</p>\n<p>部分截图</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201116110350510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>查了一下， <code>.fon</code>  是 Windows 系统字体的一类</p>\n<p>我推测 Ubuntu 不兼容此格式</p>\n<p>那就删了吧</p>\n<p>把错误复制到 excel 简单处理一下只留下字体文件名（也可以写脚本）</p>\n<p>再复制到 txt</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201116110410257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>好家伙 189 个</p>\n<p>写了个 py 脚本删除  <code>/usr/share/fonts</code>  目录下的这些字体文件</p>\n<p>脚本代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/limin/桌面/font\"</span>   <span class=\"token comment\"># 这个 font 是我的 txt 文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    l <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/usr/share/fonts/\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>path <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\" removed!\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>处理</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201116110429969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>流程再走一遍</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/share/fonts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> mkfontscale</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> mkfontdir</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> fc-cache <span class=\"token parameter variable\">-fv</span></pre></td></tr></table></figure><p>应该没有问题了</p>\n<p>有问题下次再更</p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/16/%E5%A6%82%E4%BD%95%E5%9C%A8ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8qq/",
            "url": "https://whylim.github.io/2020/11/16/%E5%A6%82%E4%BD%95%E5%9C%A8ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8qq/",
            "title": "如何在 Ubuntu 下使用 QQ",
            "date_published": "2020-11-16T01:39:00.000Z",
            "content_html": "<blockquote>\n<p>目前最简单的方法<br />\n这里写的很清楚：<a href=\"https://github.com/zq1997/deepin-wine\">https://github.com/zq1997/deepin-wine</a><br />\n 不想跳转 Github 或者进不去的也可以直接看我的</p>\n</blockquote>\n<p>用的是 deepin-wine 应用在 Ubuntu 上的移植仓库</p>\n<blockquote>\n<p>顺便一提<br />\n deepin 是个很好的国产 linux 系统，很漂亮（尤其 v20 大更后）<br />\n软件也比 Ubuntu 全（比如今天讲的 QQ，直接能在软件商店装了）<br />\n建议使用（我是自来水）<br />\n网址：<a href=\"https://www.deepin.org/zh/\">https://www.deepin.org/zh/</a></p>\n<p>我是因为之前 Web 课 xampp 的一些问题被迫转了 Ubuntu。<br />\n不过好在今年的 20.04 终于™变好看了，颜控福音</p>\n</blockquote>\n<p>唔好像偏题了</p>\n<h2 id=\"添加仓库\"><a class=\"anchor\" href=\"#添加仓库\">#</a> 添加仓库</h2>\n<p>首次使用时需要将移植仓库添加到系统中（没有 wget 的先 sudo 安装 wget）</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> -O- https://deepin-wine.i-m.dev/setup.sh <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span></pre></td></tr></table></figure><h2 id=\"应用安装\"><a class=\"anchor\" href=\"#应用安装\">#</a> 应用安装</h2>\n<p>也是用  <code>sudo apt-get install</code>  安装的</p>\n<p>常用软件包的包名：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">应用</th>\n<th style=\"text-align:center\">包名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">QQ</td>\n<td style=\"text-align:center\">com.qq.im.deepin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">微信</td>\n<td style=\"text-align:center\">com.qq.weixin.deepin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">钉钉</td>\n<td style=\"text-align:center\">com.dingtalk.deepin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">QQ 音乐</td>\n<td style=\"text-align:center\">com.qq.music.deepin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">…</td>\n<td style=\"text-align:center\">…</td>\n</tr>\n</tbody>\n</table>\n<p>比如我要安装 QQ：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> com.qq.im.deepin</pre></td></tr></table></figure><p>注意：2020 年 11 月 14 日更新以后需要注销 / 重启后才能看见启动台图标</p>\n<h2 id=\"其他可能的问题\"><a class=\"anchor\" href=\"#其他可能的问题\">#</a> 其他可能的问题</h2>\n<p>比如 QQ 头像无法加载、QQ 截图无法使用等</p>\n<p>我没遇到</p>\n<p>遇到再写</p>\n<p>Wine 不是 Windows</p>\n<p>我们只能尽可能的模拟</p>\n<p>“又不是不能用～”</p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/01/fluffbiofluff%E8%A3%85%E4%B8%8D%E4%B8%8A%E7%9A%84%E9%97%AE%E9%A2%98/",
            "url": "https://whylim.github.io/2020/11/01/fluffbiofluff%E8%A3%85%E4%B8%8D%E4%B8%8A%E7%9A%84%E9%97%AE%E9%A2%98/",
            "title": "fluff(biofluff) 装不上的问题",
            "date_published": "2020-11-01T01:53:00.000Z",
            "content_html": "<blockquote>\n<p>fluff 是一个软件包，它允许对映射到参考基因组的高通量测序实验进行简单的探索、聚类和可视化。这个包包含三个命令行工具，用于生成发布质量数据<br />\n官网：<a href=\"https://fluff.readthedocs.io/en/latest/introduction.html\">https://fluff.readthedocs.io/en/latest/introduction.html</a></p>\n</blockquote>\n<ul>\n<li>环境：Ubuntu 20.04 LTS，这个软件好像不支持 win？</li>\n</ul>\n<p>这个安装好无语。大家的 PC 都装不上，部分机房电脑是可以装上的</p>\n<p>但是既然决定 PC 上用 Ubuntu 了，那就要贯彻到底了</p>\n<h2 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h2>\n<h3 id=\"官方最简安装方法用-conda-安装\"><a class=\"anchor\" href=\"#官方最简安装方法用-conda-安装\">#</a> 官方最简安装方法：用 conda 安装</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda config <span class=\"token parameter variable\">--add</span> channels defaults</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda config <span class=\"token parameter variable\">--add</span> channels conda-forge</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conda config <span class=\"token parameter variable\">--add</span> channels bioconda</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>conda <span class=\"token function\">install</span> biofluff <span class=\"token parameter variable\">-c</span> bioconda</pre></td></tr></table></figure><p>但是这个方法。得安一小时，还报错。一开始以为是机房网不好，后来网好了发现也那么慢，唔，那没事了，可能是因为直接从外国服务器上下载的吧</p>\n<h3 id=\"第二种方法用-pip\"><a class=\"anchor\" href=\"#第二种方法用-pip\">#</a> 第二种方法：用 pip</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> biofluff</pre></td></tr></table></figure><p>这个还挺快的，但有报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Building wheel <span class=\"token keyword\">for</span> pyBigWig <span class=\"token punctuation\">(</span>setup.py<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">..</span>. error</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Running setup.py <span class=\"token function\">install</span> <span class=\"token keyword\">for</span> pyBigWig <span class=\"token punctuation\">..</span>. error</pre></td></tr></table></figure><p>少 pyBigWig 这个包</p>\n<h3 id=\"比较麻烦的方法源码安装\"><a class=\"anchor\" href=\"#比较麻烦的方法源码安装\">#</a> 比较麻烦的方法：源码安装</h3>\n<p>可以全部用命令行，用 git</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/simonvh/fluff.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> fluff</pre></td></tr></table></figure><p>也可以图形界面浏览器直接到 <a href=\"https://github.com/simonvh/fluff/releases\">https://github.com/simonvh/fluff/releases</a> 下载压缩包</p>\n<p>最新的版本是 3.0.3</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /opt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> fluff</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 去 /opt 目录下创建 fluff 的文件夹</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> xvzf fluff-3.0.3.tar.gz <span class=\"token parameter variable\">-C</span> /opt/fluff</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 解压到 /opt/fluff 目录下</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /opt/fluff/fluff-3.0.3</pre></td></tr></table></figure><p>编译</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> python setup.py build</pre></td></tr></table></figure><p>报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo: python：找不到命令</pre></td></tr></table></figure><p>这个可能是 anaconda 和自带 python 冲突了？反正是没有在 bin 里关联全局指令</p>\n<p>用 which 命令看 python 的位置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">which</span> python</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 返回 /home/limin/anaconda3/bin/python</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 那就这么写</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> /home/limin/anaconda3/bin/python setup.py build</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> /home/limin/anaconda3/bin/python setup.py <span class=\"token function\">install</span></pre></td></tr></table></figure><p>报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Either libcurl isn<span class=\"token string\">'t installed, it didn'</span>t come with curl-config, or curl-config isn<span class=\"token string\">'t in your $PATH. pyBigWig will be installed without support for remote files.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>......</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>No eggs found in /tmp/easy_install-b42ki6n5/pyBigWig-0.3.17/egg-dist-tmp-syp78d48 (setup script problem?)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>error: The '</span>pyBigWig' distribution was not found and is required by biofluff</pre></td></tr></table></figure><p>大概还是少 pyBigWig 这个包，而且这个包依赖</p>\n<p>再来一遍 还是报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Installed /home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Processing dependencies <span class=\"token keyword\">for</span> <span class=\"token assign-left variable\">biofluff</span><span class=\"token operator\">==</span><span class=\"token number\">3.0</span>.3</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Searching <span class=\"token keyword\">for</span> pyBigWig</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Reading https://pypi.org/simple/pyBigWig/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Download error on https://pypi.org/simple/pyBigWig/: <span class=\"token punctuation\">[</span>Errno -3<span class=\"token punctuation\">]</span> Temporary failure <span class=\"token keyword\">in</span> name resolution -- Some packages may not be found<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Couldn<span class=\"token string\">'t find index page for '</span>pyBigWig<span class=\"token string\">' (maybe misspelled?)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Scanning index of all packages (this may take a while)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Reading https://pypi.org/simple/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Download error on https://pypi.org/simple/: [Errno -3] Temporary failure in name resolution -- Some packages may not be found!</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>No local packages or working download links found for pyBigWig</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>error: Could not find suitable distribution for Requirement.parse('</span>pyBigWig'<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"解决\"><a class=\"anchor\" href=\"#解决\">#</a> 解决</h2>\n<p>第一种方法不要了</p>\n<p>从后两种方法的报错来看，主要问题：缺少 pyBigWig</p>\n<p>装就完了</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> pip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">pyBigWig</span><span class=\"token operator\">==</span><span class=\"token number\">0.2</span>.5</pre></td></tr></table></figure><p>报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sudo: pip：找不到命令</pre></td></tr></table></figure><p>真烦人。去 conda 里装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda activate</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">pyBigWig</span><span class=\"token operator\">==</span><span class=\"token number\">0.2</span>.5</pre></td></tr></table></figure><p>报错</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>In <span class=\"token function\">file</span> included from libBigWig/bigWig.h:1,</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>from libBigWig/bwStats.c:1:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>libBigWig/io.h:1:10: fatal error: curl/curl.h: 没有那个文件或目录</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">1</span>  <span class=\"token comment\">#include </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                ^~~~~~~~~~~~~</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>compilation terminated.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>error: <span class=\"token builtin class-name\">command</span> <span class=\"token string\">'gcc'</span> failed with <span class=\"token builtin class-name\">exit</span> status <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>----------------------------------------</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ERROR: Failed building wheel <span class=\"token keyword\">for</span> pyBigWig</pre></td></tr></table></figure><p>少 curl 依赖，装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">curl</span> libcurl4 libcurl4-openssl-dev</pre></td></tr></table></figure><p>再装 pyBigWig 就可以了</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">pyBigWig</span><span class=\"token operator\">==</span><span class=\"token number\">0.2</span>.5</pre></td></tr></table></figure><p>成功后再装 biofluff</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> biofluff</pre></td></tr></table></figure><p>成功了！运行 fluff</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> limin@limin-Lenovo-XiaoXin-Air-15IKBR:~$ fluff</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:46: SyntaxWarning: <span class=\"token string\">\"is not\"</span> with a literal. Did you mean <span class=\"token string\">\"!=\"</span>?</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:46: SyntaxWarning: <span class=\"token string\">\"is\"</span> with a literal. Did you mean <span class=\"token string\">\"==\"</span>?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:51: SyntaxWarning: <span class=\"token string\">\"is not\"</span> with a literal. Did you mean <span class=\"token string\">\"!=\"</span>?</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:51: SyntaxWarning: <span class=\"token string\">\"is\"</span> with a literal. Did you mean <span class=\"token string\">\"==\"</span>?</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:46: SyntaxWarning: <span class=\"token string\">\"is not\"</span> with a literal. Did you mean <span class=\"token string\">\"!=\"</span>?</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:46: SyntaxWarning: <span class=\"token string\">\"is\"</span> with a literal. Did you mean <span class=\"token string\">\"==\"</span>?</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:51: SyntaxWarning: <span class=\"token string\">\"is not\"</span> with a literal. Did you mean <span class=\"token string\">\"!=\"</span>?</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/home/limin/anaconda3/lib/python3.8/site-packages/biofluff-3.0.3-py3.8.egg/fluff/track.py:51: SyntaxWarning: <span class=\"token string\">\"is\"</span> with a literal. Did you mean <span class=\"token string\">\"==\"</span>?</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>usage: fluff <span class=\"token punctuation\">[</span>-h<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    fluff v3.0.3</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>positional arguments:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span>heatmap,bandplot,profile<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>optional arguments:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  -h, <span class=\"token parameter variable\">--help</span>            show this <span class=\"token builtin class-name\">help</span> message and <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    commands:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        heatmap      Produce a heatmap</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        bandplot     Show the profiles as bandplots</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        profile      Genome Browser screenshot</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">&lt;</span>/span<span class=\"token operator\">></span>fluff <span class=\"token operator\">&lt;</span>span <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"token operator\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;&lt;</span>/span<span class=\"token operator\">></span>command<span class=\"token operator\">&lt;</span>span <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"token operator\"</span><span class=\"token operator\">>></span><span class=\"token operator\">&lt;</span>/span<span class=\"token operator\">></span> -h<span class=\"token operator\">&lt;</span>span <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"token variable\"</span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> details</pre></td></tr></table></figure><p>有一点报错，但是不影响使用。</p>\n",
            "tags": [
                "生信",
                "Ubuntu",
                "软件安装"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/11/01/ubuntu%E5%AE%89%E8%A3%85art-illumina/",
            "url": "https://whylim.github.io/2020/11/01/ubuntu%E5%AE%89%E8%A3%85art-illumina/",
            "title": "Ubuntu 安装 art_illumina",
            "date_published": "2020-11-01T01:39:00.000Z",
            "content_html": "<p>官网：<a href=\"http://www.niehs.nih.gov/research/resources/software/biostatistics/art/\">http://www.niehs.nih.gov/research/resources/software/biostatistics/art/</a></p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201101092531986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /><br />\n往下翻找下载链接，结果发现他这二进制包不显示。</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201101092610777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>审查元素</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201101092636854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>这不就找到了</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 浏览器下载在下载目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> 下载</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 解压到安装位置（Ubuntu 的软件一般安装在 /home/ 用户名 /opt, 我这里直接解压到主目录了</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> artbinmountrainier2016.06.05linux64.tgz <span class=\"token parameter variable\">-C</span> <span class=\"token punctuation\">..</span>/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 进入主目录</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 进入解压出来的文件夹</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">cd</span> art_bin_MountRainier/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 运行</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>./art_illumina</pre></td></tr></table></figure><p>可用</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201101092831442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>添加到环境变量</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"export PATH=\\<span class=\"token environment constant\">$PATH</span>:/home/limin/art_bin_MountRainier\"</span> <span class=\"token operator\">>></span> ~/.bashrc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">source</span> ~/.bashrc</pre></td></tr></table></figure><p>可用</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201101093627733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n",
            "tags": [
                "生信",
                "Ubuntu",
                "软件安装"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/10/31/ubuntu%E6%9B%B4%E6%96%B0%E6%97%B6boot%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3/",
            "url": "https://whylim.github.io/2020/10/31/ubuntu%E6%9B%B4%E6%96%B0%E6%97%B6boot%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3/",
            "title": "Ubuntu 更新时 boot 空间不足",
            "date_published": "2020-10-31T15:58:00.000Z",
            "content_html": "<blockquote>\n<p>这是之前写的，后来重装系统图片没了。有机会补图<br />\n参考：<a href=\"https://blog.csdn.net/qq%5C_27818541/article/details/72675954\">https://blog.csdn.net/qq\\_27818541/article/details/72675954</a></p>\n</blockquote>\n<h2 id=\"更新问题\"><a class=\"anchor\" href=\"#更新问题\">#</a> 更新问题</h2>\n<p>之前装系统时分给 /boot 了 210MB</p>\n<p>当 linux 系统升级的时候，旧的内核版本并不会被清理，升级几次就提示 /boot 内存不足了</p>\n<p>所以要卸载旧的版本内核</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<h3 id=\"查看已安装的内核版本\"><a class=\"anchor\" href=\"#查看已安装的内核版本\">#</a> 查看已安装的内核版本</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg --get-selectionsgrep linux-image</pre></td></tr></table></figure><p>已安装了两个版本：5.3.0-28 和 5.3.0-40</p>\n<h3 id=\"查看正在使用的内核版本\"><a class=\"anchor\" href=\"#查看正在使用的内核版本\">#</a> 查看正在使用的内核版本</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-a</span></pre></td></tr></table></figure><p>正在使用的是 5.3.0-40</p>\n<h3 id=\"删除旧的内核\"><a class=\"anchor\" href=\"#删除旧的内核\">#</a> 删除旧的内核</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge linux-image-5.3.0-28-generic</pre></td></tr></table></figure><p>然后发现多了一个 unsigned</p>\n<p>然后我就把他删了。</p>\n<p>df 一下</p>\n<p>有空间了</p>\n",
            "tags": [
                "Ubuntu"
            ]
        },
        {
            "id": "https://whylim.github.io/2020/10/31/ubuntu%E7%A1%AC%E7%9B%98%E5%AE%89%E8%A3%85/",
            "url": "https://whylim.github.io/2020/10/31/ubuntu%E7%A1%AC%E7%9B%98%E5%AE%89%E8%A3%85/",
            "title": "Ubuntu 硬盘安装",
            "date_published": "2020-10-31T13:52:00.000Z",
            "content_html": "<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作：</h3>\n<ul>\n<li>一个 4GB 或更大的 U 盘</li>\n<li>Ubuntu ISO 镜像文件</li>\n<li>Microsoft Windows XP 或更高的系统版本</li>\n<li><a href=\"https://rufus.ie/\"><strong><em>Rufus</em></strong></a> ：Ubuntu 官方推荐的免费开源 USB 启动盘制作工具</li>\n</ul>\n<h3 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明：</h3>\n<ul>\n<li>U 盘不要是_扩容 U 盘_</li>\n<li>Ubuntu 粗分几种版本\n<ul>\n<li><code>桌面版</code> （图形界面）与  <code>服务器版</code> （无图形界面）</li>\n<li><code>长期支持版</code> （LTS，5 年）和  <code>普通版</code> （9 个月）</li>\n<li>我们一般选 **<em> 长期支持的桌面版</em> **</li>\n</ul>\n</li>\n<li><a href=\"https://ubuntu.com/\">官方网站</a> 下载镜像 因为服务器在国外所以速度极慢， 推荐 <a href=\"http://mirrors.163.com/ubuntu-releases/\">网易的镜像链接</a> 快到飞起</li>\n<li>（新版本界面不太一样） <img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201031212121773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" />\n<ul>\n<li>设备选 U 盘别选错了</li>\n<li>选择下载好的镜像文件</li>\n<li>分区类型：安装在固态硬盘选 MBR，机械硬盘选 GPT</li>\n<li>默认 FAT32 格式就行（我试过格成 NTFS，我的主板不识别。）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"进-bios-调启动顺序-不写了\"><a class=\"anchor\" href=\"#进-bios-调启动顺序-不写了\">#</a> 进 BIOS 调启动顺序。不写了</h2>\n<h2 id=\"进入安装界面\"><a class=\"anchor\" href=\"#进入安装界面\">#</a> 进入安装界面</h2>\n<p>试用 Ubuntu / 安装 Ubuntu 都可以选（在试用里也可以安装）</p>\n<p>然后到这里</p>\n<p><img loading=\"lazy\" data-src=\"https://img-blog.csdnimg.cn/20201031212809648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NTRE5fTElN,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>选项的意思：</p>\n<ul>\n<li>安装 Ubuntu，与其它系统共存：这个选项只有在你的电脑的硬盘上已经有至少一个操作系统（例如 Window 或 macOS）的情况下，才会显示。如果你的电脑硬盘上还没有任何操作系统，那么这条选项就不会存在。如果勾选了这个选项，接下去安装程序就会为你自动设置分区。</li>\n<li>清除整个磁盘并安装 Ubuntu：谨慎选择。因为它会把硬盘上所有的操作系统都抹除，因此一般我们不选这个选项，除非你的电脑硬盘上还没有任何操作系统。如果勾选了这个选项，安装程序会首先删除你的硬盘上的几乎所有东西，接下去安装程序就会为你自动设置分区。</li>\n<li>其它选项：如果勾选了这个选项，接下去你就得手动进行分区。</li>\n</ul>\n<p>如果是单系统就选  <code>清除整个磁盘并安装 Ubuntu</code></p>\n<p>如果是装双系统选  <code>其他选项</code></p>\n<p>反正选第一个我没试过。</p>\n<p>先把要安装的硬盘（分区）右键  <code>删除</code>  可以看到它变成了  <code>空闲</code></p>\n<p>然后双机或者点左下的  <code>+加号</code>  依次创建以下分区</p>\n<table>\n<thead>\n<tr>\n<th>大小（建议）</th>\n<th>新分区的类型</th>\n<th>新分区的位置</th>\n<th>用于</th>\n<th>挂载点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>500MB</td>\n<td>逻辑分区</td>\n<td>空间起始位置</td>\n<td>Ext4 日志文件系统</td>\n<td>/boot</td>\n</tr>\n<tr>\n<td>10GB</td>\n<td>逻辑分区</td>\n<td>空间起始位置</td>\n<td>交换空间</td>\n<td></td>\n</tr>\n<tr>\n<td>100GB</td>\n<td>主分区</td>\n<td>空间起始位置</td>\n<td>Ext4 日志文件系统</td>\n<td>/</td>\n</tr>\n<tr>\n<td>剩下的</td>\n<td>逻辑分区</td>\n<td>空间起始位置</td>\n<td>Ext4 日志文件系统</td>\n<td>/home</td>\n</tr>\n</tbody>\n</table>\n<p>linux 内核在更新时并不会自动删除老内核，会使  <code>/boot</code>  空间不足，这个问题的解决方案详见 <a href=\"https://blog.limina.top/?p=80\">这里</a></p>\n<p><strong>这里要说一下，其实只分一个  <code>/</code>  也可以，上述的分法是方便以后重装系统，只需要格式化  <code>/</code>  和  <code>boot</code>  就行了，保留数据。</strong></p>\n<p><code>安装启动引导器的设备</code>  选刚刚的  <code>/boot</code> ，然后  <code>现在安装</code></p>\n<p>就好了。</p>\n<h2 id=\"安装完成后的一些问题\"><a class=\"anchor\" href=\"#安装完成后的一些问题\">#</a> 安装完成后的一些问题</h2>\n<ol>\n<li>\n<p>没有网络：主流笔记本一般不会有，但是因为我之前装黑苹果换了博通的网卡，驱动有点难搞 <a href=\"https://blog.csdn.net/love_fdu_llp/article/details/20866323\">https://blog.csdn.net/love_fdu_llp/article/details/20866323</a></p>\n<p>这个问题已经解决：今年更新的 20.04 LTS 安装时有选项自动安装驱动</p>\n</li>\n</ol>\n",
            "tags": [
                "Ubuntu"
            ]
        }
    ]
}